based on this source: https://adyraj.medium.com/video-streaming-using-python-ed73dc5bcb30

Rpi would be a server:

before we need to make sure to have imutils installed. I used sudo pip3 install imutilsand it worked.

for opencv on rpi I used this source - https://raspberrytips.com/install-opencv-on-raspberry-pi/

# This code is for the server 
# Lets import the libraries
import socket, cv2, pickle,struct,imutils

# Socket Create
server_socket = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
#host_name  = socket.gethostname()
host_ip = socket.gethostbyname("192.168.1.2")
print('HOST IP:',host_ip)
port = 3333
socket_address = (host_ip,port)

# Socket Bind
server_socket.bind(socket_address)

# Socket Listen
server_socket.listen(1)
print("LISTENING AT:",socket_address)

# Socket Accept
while True:
	client_socket,addr = server_socket.accept()
	print('GOT CONNECTION FROM:',addr)
	if client_socket:
		vid = cv2.VideoCapture(1)
		
		while(vid.isOpened()):
			img,frame = vid.read()
			frame = imutils.resize(frame,width=1040)
			a = pickle.dumps(frame)
			message = struct.pack("Q",len(a))+a
			client_socket.sendall(message)
			
			cv2.imshow('TRANSMITTING VIDEO',frame)
			if cv2.waitKey(1) == '1':
				client_socket.close()
				
gethostbyname- put IP address of server (RPi). command: ifconfig, wlan section

enter ls dev/video*   to see which port the device in, in this case port 1




PC is client:


    import socket,cv2, pickle,struct

    # create socket
    client_socket = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    host_ip = '192.168.1.2' # paste your server ip address here
    port = 9999
    client_socket.connect((host_ip,port)) # a tuple
    data = b""
    payload_size = struct.calcsize("Q")
    while True:
        while len(data) < payload_size:
            packet = client_socket.recv(4*1024) # 4K
            if not packet: break
            data+=packet
        packed_msg_size = data[:payload_size]
        data = data[payload_size:]
        msg_size = struct.unpack("Q",packed_msg_size)[0]
        
        while len(data) < msg_size:
            data += client_socket.recv(4*1024)
        frame_data = data[:msg_size]
        data  = data[msg_size:]
        frame = pickle.loads(frame_data)
        cv2.imshow("RECEIVING VIDEO",frame)
        if cv2.waitKey(1) == '13':
            break
    client_socket.close()

use IP address of the server(Rpi)

